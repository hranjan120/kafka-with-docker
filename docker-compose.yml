version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"
    volumes: 
      - ./kafka-volume/zoo/data:/var/lib/zookeeper/data
      - ./kafka-volume/zoo/log:/var/lib/zookeeper/log


  kafka-1:
    image: confluentinc/cp-kafka:7.5.3
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    volumes: 
      - ./kafka-volume/broker1/data:/var/lib/kafka/data


  kafka-2:
    image: confluentinc/cp-kafka:7.5.3
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 2
    depends_on:
      - zookeeper
    volumes: 
      - ./kafka-volume/broker2/data:/var/lib/kafka/data


  kafka-3:
    image: confluentinc/cp-kafka:7.5.3
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
    depends_on:
      - zookeeper
    volumes: 
      - ./kafka-volume/broker3/data:/var/lib/kafka/data


  kafka-ui:
    image: consdata/kouncil:latest
    ports:
      - "8080:8080"
    environment:
      bootstrapServers: 'kafka-1:19092'
      kouncil.auth.active-provider: 'inmemory'
    depends_on:
      - zookeeper


  consumer-app:
    build:
      dockerfile: Dockerfile
      context: ./consumer-app
    container_name: consumer-app
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - "kafka-3"
    command:
      - '/bin/sh'
      - '-c'
      - '/bin/sleep 30 && npm run "container"'
    volumes:
      - ./consumer-app/:/app/consumer-app
      - /app/consumer-app/node_modules


  producer-app:
    build:
      dockerfile: Dockerfile
      context: ./producer-app
    container_name: producer-app
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "kafka-3"
    command:
      - '/bin/sh'
      - '-c'
      - '/bin/sleep 30 && npm run "container"'
    volumes:
      - ./producer-app/:/app/producer-app
      - /app/producer-app/node_modules
